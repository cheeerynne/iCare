{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nvar _jsxFileName = \"/Users/rachel/Desktop/Hackathon/hackathonn/Hackathon/app/Notif.js\";\nimport React, { Component } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Picker from \"react-native-web/dist/exports/Picker\";\nimport AppState from \"react-native-web/dist/exports/AppState\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport { useState } from \"react-native-web/dist/index\";\n\nvar Notif = function Notif(props) {\n  var _React$useState = React.useState(1),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      state = _React$useState2[0],\n      setState = _React$useState2[1];\n\n  var componentDidMount = function componentDidMount() {\n    AppState.addEventListener('change', handleAppStateChange);\n  };\n\n  var componentWillUnmount = function componentWillUnmount() {\n    AppState.removeEventListener('change', handleAppStateChange);\n  };\n\n  var handleAppStateChange = function handleAppStateChange(appState) {\n    if (appState === 'background') {\n      var date = new Date(Date.now() + state * 1000);\n\n      if (Platform.OS === 'ios') {\n        date = date.toISOString();\n      }\n\n      PushNotification.localNotificationSchedule({\n        message: \"My Notification Message\",\n        date: date\n      });\n    }\n  };\n\n  return React.createElement(View, {\n    style: styles.container,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.welcome,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 11\n    }\n  }, \"Choose your notification time in hours.\"), React.createElement(Picker, {\n    style: styles.picker,\n    selectedValue: state,\n    onValueChange: function onValueChange(hours) {\n      return setState(hours);\n    },\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }\n  }, React.createElement(Picker.Item, {\n    label: \"1\",\n    value: 1,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"2\",\n    value: 2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"3\",\n    value: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 13\n    }\n  }), React.createElement(Picker.Item, {\n    label: \"4\",\n    value: 4,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 13\n    }\n  })));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: 'center',\n    alignItems: 'center',\n    backgroundColor: '#F5FCFF'\n  },\n  welcome: {\n    fontSize: 20,\n    textAlign: 'center',\n    margin: 10\n  },\n  picker: {\n    width: 100\n  }\n});\nexport default Notif;","map":{"version":3,"sources":["/Users/rachel/Desktop/Hackathon/hackathonn/Hackathon/app/Notif.js"],"names":["React","Component","useState","Notif","props","state","setState","componentDidMount","AppState","addEventListener","handleAppStateChange","componentWillUnmount","removeEventListener","appState","date","Date","now","Platform","OS","toISOString","PushNotification","localNotificationSchedule","message","styles","container","welcome","picker","hours","StyleSheet","create","flex","justifyContent","alignItems","backgroundColor","fontSize","textAlign","margin","width"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport { View, Text, StyleSheet, Picker, AppState, Platform, useState} from 'react-native';\n\nconst Notif = props => {\n  const [state, setState] = React.useState(1);\n  const componentDidMount = () => {\n    AppState.addEventListener('change', handleAppStateChange);\n  };\n\n  const componentWillUnmount = () => {\n    AppState.removeEventListener('change', handleAppStateChange);\n  };\n\n  const handleAppStateChange = (appState) => {\n    if (appState === 'background') {\n      let date = new Date(Date.now() + (state * 1000));\n\n      if (Platform.OS === 'ios') {\n        date = date.toISOString();\n      }\n\n      PushNotification.localNotificationSchedule({\n        message: \"My Notification Message\",\n        date,\n      });\n    }\n  }\n\n    return (\n        <View style={styles.container}>\n          <Text style={styles.welcome}>\n            Choose your notification time in hours.\n          </Text>\n          <Picker\n            style={styles.picker}\n            selectedValue={state}\n            onValueChange={(hours) => setState(hours)}\n          >\n            <Picker.Item label=\"1\" value={1} />\n            <Picker.Item label=\"2\" value={2} />\n            <Picker.Item label=\"3\" value={3} />\n            <Picker.Item label=\"4\" value={4} />\n          </Picker>\n        </View>\n      );\n};\n\nconst styles = StyleSheet.create({\n    container: {\n      flex: 1,\n      justifyContent: 'center',\n      alignItems: 'center',\n      backgroundColor: '#F5FCFF',\n    },\n    welcome: {\n      fontSize: 20,\n      textAlign: 'center',\n      margin: 10,\n    },\n    picker: {\n      width: 100,\n    },\n  });\n\n  export default Notif;\n"]},"metadata":{},"sourceType":"module"}